// Copyright 2012 Citrix Systems, Inc. Licensed under the
// Apache License, Version 2.0 (the "License"); you may not use this
// file except in compliance with the License.  Citrix Systems, Inc.
// reserves all rights not expressly granted by the License.
// You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// Automatically generated by addcopyright.py at 04/03/2012
package com.cloud.api.commands;

import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Logger;

import com.cloud.api.ApiConstants;
import com.cloud.api.BaseListCmd;
import com.cloud.api.IdentityMapper;
import com.cloud.api.Implementation;
import com.cloud.api.Parameter;
import com.cloud.api.PlugService;
import com.cloud.api.response.HostUpdatesResponse;
import com.cloud.api.response.ListResponse;
import com.cloud.updates.interfaces.HostUpdatesRef;
import com.cloud.updates.interfaces.HostUpdatesService;

@Implementation(description="Lists Host Updates.", responseObject=HostUpdatesResponse.class)
public class ListHostUpdatesCmd extends BaseListCmd {
    public static final Logger s_logger = Logger.getLogger(ListHostUpdatesCmd.class.getName());

    private static final String s_name = "listhostupdatesresponse";
    @PlugService HostUpdatesService _hostUpdatesService;
    /////////////////////////////////////////////////////
    //////////////// API parameters /////////////////////
    /////////////////////////////////////////////////////

    @IdentityMapper(entityTableName="host_updates")
    @Parameter(name=ApiConstants.ID, type=CommandType.LONG, description="the update uuid")
    private Long id;

    @IdentityMapper(entityTableName="host")
    @Parameter(name=ApiConstants.HOST_ID, type=CommandType.LONG, required=true, description="the id of the host")
    private Long hostId;

    @Parameter(name=ApiConstants.APPLIED, type=CommandType.BOOLEAN, description="update applied or not (true, false)")
    private Boolean applied;

    /////////////////////////////////////////////////////
    /////////////////// Accessors ///////////////////////
    /////////////////////////////////////////////////////

    public Long getId() {
        return id;
    }

    public Long getHostId() {
        return hostId;
    }

    public Boolean isApplied() {
        return applied;
    }

    /////////////////////////////////////////////////////
    /////////////// API Implementation///////////////////
    /////////////////////////////////////////////////////

    @Override
    public String getCommandName() {
        return s_name;
    }    

    @Override
    public void execute(){
        List<? extends HostUpdatesRef> result = _hostUpdatesService.searchForHostUpdates(this);
        ListResponse<HostUpdatesResponse> response = new ListResponse<HostUpdatesResponse>();
        List<HostUpdatesResponse> hostUpdatesResponseList = new ArrayList<HostUpdatesResponse>();
        for (HostUpdatesRef update : result) {
            HostUpdatesResponse hostUpdatesResponse = _hostUpdatesService.createHostUpdatesResponse(update);
            hostUpdatesResponse.setObjectName("update");
            hostUpdatesResponseList.add(hostUpdatesResponse);
        }

        response.setResponses(hostUpdatesResponseList);
        response.setResponseName(getCommandName());
        this.setResponseObject(response);
    }
}
