//Copyright 2012 Citrix Systems, Inc. Licensed under the
//Apache License, Version 2.0 (the "License"); you may not use this
//file except in compliance with the License.  Citrix Systems, Inc.
//reserves all rights not expressly granted by the License.
//You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
//Automatically generated by addcopyright.py at 04/03/2012
package com.cloud.api.commands;

import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Logger;

import com.cloud.api.BaseListCmd;
import com.cloud.api.Implementation;
import com.cloud.api.PlugService;
import com.cloud.api.response.HostsWithPendingUpdatesResponse;
import com.cloud.api.response.ListResponse;
import com.cloud.updates.interfaces.HostUpdatesService;

@Implementation(description = "Lists Hosts with pending Updates.", responseObject = HostsWithPendingUpdatesResponse.class)
public class ListHostsWithPendingUpdatesCmd extends BaseListCmd {
    public static final Logger s_logger = Logger
            .getLogger(ListHostsWithPendingUpdatesCmd.class.getName());

    private static final String s_name = "listhostswithpendingupdatesresponse";
    @PlugService
    HostUpdatesService _hostUpdatesService;

    // ///////////////////////////////////////////////////
    // ///////////// API Implementation///////////////////
    // ///////////////////////////////////////////////////

    @Override
    public String getCommandName() {
        return s_name;
    }

    @Override
 public void execute(){
     List<Long> result = _hostUpdatesService.searchForHosts(this);
     ListResponse<HostsWithPendingUpdatesResponse> response = new ListResponse<HostsWithPendingUpdatesResponse>();
     ArrayList<HostsWithPendingUpdatesResponse> hostsWithPendingUpdatesResponseList = new ArrayList<HostsWithPendingUpdatesResponse>();
     for (Long update : result) {
         
         HostsWithPendingUpdatesResponse hostWithPendingUpdatesResponse = _hostUpdatesService.createHostsWithPendingUpdatesResponse(update);
         hostWithPendingUpdatesResponse.setObjectName("host");
         hostsWithPendingUpdatesResponseList.add(hostWithPendingUpdatesResponse);
     }

     response.setResponses(hostsWithPendingUpdatesResponseList);
     response.setResponseName(getCommandName());
     this.setResponseObject(response);
 }
}