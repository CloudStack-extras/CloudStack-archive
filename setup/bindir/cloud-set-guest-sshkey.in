#!/bin/bash 
#
# Init file for SSH Public Keys Download Client
#
# chkconfig: 345 98 02
# description: SSH Public Keys Download Client

# Modify this line to specify the user (default is root)
user=root



# Add your DHCP lease folders here
DHCP_FOLDERS="/var/lib/dhclient/* /var/lib/dhcp3/*"

if [ -f /etc/debian_version ]; then
 # Ubuntu
        DHCP_FOLDERS="/var/lib/dhcpcd/dhcpcd-eth0.*"
elif [ -f /etc/redhat-release ]; then
 # Redhat / CentOS / Scientific Linux
        DHCP_FOLDERS="/var/lib/dhclient/* /var/lib/dhcp3/*"
else
 # Others
        DHCP_FOLDERS="/var/lib/dhclient/* /var/lib/dhcp3/*"
fi
keys_received=0
file_count=0

for DHCP_FILE in $DHCP_FOLDERS
do
	if [ -f $DHCP_FILE ]
	then
		file_count=$((file_count+1))
		SSHKEY_SERVER_IP=$(grep dhcp-server-identifier $DHCP_FILE | tail -1 | awk '{print $NF}' | tr -d '\;')
                 if [ -f /etc/debian_version ]; then
                   # Ubuntu
                   SSHKEY_SERVER_IP=$(grep DHCPSID $DHCP_FILE | tail -1 |  egrep -o '([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})' )
                  elif [ -f /etc/redhat-release ]; then
                   # Redhat / CentOS / Scientific Linux
                   SSHKEY_SERVER_IP=$(grep dhcp-server-identifier $DHCP_FILE | tail -1 | awk '{print $NF}' | tr -d '\;')
                  else
                   # Others
                   SSHKEY_SERVER_IP=$(grep dhcp-server-identifier $DHCP_FILE | tail -1 | awk '{print $NF}' | tr -d '\;')
                  fi

		if [ -n $SSHKEY_SERVER_IP ]
		then
			logger -t "cloud" "Sending request to ssh key server at $SSHKEY_SERVER_IP"

			publickey=$(wget -t 3 -T 20 -O - http://$SSHKEY_SERVER_IP/latest/public-keys 2>/dev/null)

			if [ $? -eq 0 ]
			then
				logger -t "cloud" "Got response from server at $SSHKEY_SERVER_IP"
				keys_received=1
				break
			fi
		else
			logger -t "cloud" "Could not find ssh key server IP in $DHCP_FILE"
		fi
	fi
done

# did we find the keys anywhere?
if [ "$keys_received" == "0" ]
then
    logger -t "cloud" "Failed to get ssh keys from any server"
    exit 1
fi



# set ssh public key
homedir=$(grep ^$user /etc/passwd|awk -F ":" '{print $6}')
sshdir=$homedir/.ssh
authorized=$sshdir/authorized_keys


if [ ! -e $sshdir ]
then
    mkdir $sshdir
fi

if [ ! -e $authorized ]
then
    touch $authorized
fi

#cat $authorized|grep -v "$publickey" > $authorized
#echo "$publickey" >> $authorized
#To support user copied ssh keys
if [ `grep -c "$publickey" $authorized` == 0 ]
then
        echo "$publickey" >> $authorized
fi

exit 0

